package encrypted

import (
	"bytes"
	"encoding/hex"
	"fmt"
	"log"

	"github.com/atilaromero/telegram-desktop-decrypt/tdata"
)

const hexMap0 = "54444624ff4d0f000000002022dd185d121fa462a96ccfcc738f79c1036501917d89cc0544fc877181f6d44800000120cbd1c935a93b32e477404d7ecf89412b6b2b2513017d776d0f392b25dfd8b704225059f0ffc3aee46aed5a6ee8fad9127d1508500b3edccf8f1d892890731589b464340c0edc3252af50917743e85ff04edab14a776ca3462bce0990040289bc3c37b4e42c516299b3d665eaaccbb253c7e2229352ec5871c1c41f5469b9add875800ab14c8bcaa18786bba6b1d2343a797895583aeddd57aa8d6b167f122a9dd35c281d0d0d9a6535d1f02e7fadb25bcdceacd02f10dd0d4abff3c07a3d7ce645acef6e2973ecedc7fecd53266fffa555754d12d671dcbf3acad402ceee10e5bc3520ae96c8c6f3a2b94d701a412f748433f234822bca4d147e0691ad99e7c3ae204401741b5fbc180645bdf1433bf8a5af9d765dd483c21849d4a62d7777f0000009e0e377eb1940708f515d5b1d1576cca77f9798540f980b531812cb382b14332c76731952915aed8b255b58e73558ee378dc3b4153c09347811a1c75a4f4473005f1d6cf7728a2ffc879b8226aef6e8fd2cda15375af6c0c5c93ae1acf9fdd274ece3b49fac73943607017b2530d194015445ca257100e6527ba9f13b45cf7868a0f61085b71a0d5520a3945828da5bc063d3a0165570d300f8ed371a9f6e3bf8a3a5bc50451e47acab8cd3a8f216ee9045bf9fc5f960b10cc0c7474517adaf321e8ff2bc4ac0be071d0c8c39de0d248ca4e7aad0aebb74ce0b82f200af42a2768ba5297d2d99ca90734642f02c88478ab86161d4bbf5e052e14342d8d294bb859db9fde5065a8b5f4e800f2df89a22b5a93841dee98feae145d3732925ae83cb42d099dbc8604d92a4dcdd3ac0fc5c7edffdb895a8a61a4c5a38750ba4a62c56ee7e6c6f06764da3f0d2dc603a2da48cd5e4c2f026d95f9f51246a5f0c36889ac67faddf2e07f430b75e49d25cc0dfab671a91531a9c0dede2bb17a474d5e47f4dd3238d2f63ba95bd5de74242fb63f2936d0145950cf48c14f50cd7ec1069d2ea12e0c9c28180c6d946e8493f51a4943e021a7af2f1eac9b1aa1495de0291ce307ac91af7b318b8e5277e78e43277b49356f02e3dddc25f7cfd4de0c8e4ee3c8dca38874db837918546263c288211d84a12c89d851236100fc710e8d5db09504a0c1318966e7ec82a62c2132cdc95c1c0e3769a3a6f15304a5174fbf4e16c74009f7d6150dbf8a8d7051cf2390debcb102b29db6617e15180bf4993f354251b3f66baa0a81349877481fc2d76656e97d5086ef75acd255be9c878cec49519d40cff5716bb1f282ebdf967a5364246ce4cf00fb92ee358b478d23f481322ccfefcf377fb607998998c8b60c1aff5229bff8f29cf8288f112894254f52ed14186d9603bf397e6a9fde3614d2d1111abb81211961d46234d6bb3efee3d7b3865b9b753fc933619eb1a676d70ffaf5f9317ceae78ce140723392b945bb152940a4baf4035dd694a61787c8a64ac7a9afadb77b2a1151380da69bddc3d894321ee235352a678f1888fd21d31f3b7c747514a14feae4eba963bc5e02ed52c7e0f25f1ad4b547cd3fda5e168c5e232ddad780924bd3d980f11b0d1a1c258df49849eb68e0578499690a2013650d7549a5021b5559de092129895d529290cc364c054cc0d54a461cae1bfdf4a3e3c4ddcdbd7f2cab562cf6aadfd784b88f2bed96bbd2c91e7de4e8e6048dee007b2110173954fb761b3a77f046909b6642f09409ac7773466efee002778e21b3d0bab7108ec81a822516c7456791079fa708c5ed8fb096183225f0c7f64b865b3b2057e41550f44ac79bed903564e065429ff287f341f2aaaa3a146adf4be92d722a201d00b6b9c563e4d69302b26eb6f8c7721053c653a3fab23a0cc588394d79e57d83b323dd4478f66e65faf2a934e68875b632d81fe878bd73adc1e9d4c1cc90ebecf38e2f44c300200cff0374c7ccd25c085b058d6ba1154f7aa8a965c9f0f85de449fd4461500810f024b3caa1b6b29215fa4c28790f5d0b48e6290ea6c2d30b4da4b09285574b45a3ae32efb68ae83cb84de3f7999264f9047a4cc8a98f5f6386da81fc41722ffa1e5e769fcd907137d3e7fc6fb894f0b39050402b22bfbf2aa1db11b9b113dbfaeca37eb3fa8742619ada74c17877190233c8feb5b079b0ef0a860421f946a7cedae36f5a70b81ae6ae78d7e8acdef4f72e782ac887950c672a38652e7195169ca24b4659c8f207e08000296711c6f7e92772a5dd6ba8975856394cb5f9f993dce5aa448c01eef1c3a108b6710c6ac56e05175540295f51b485aac4608597545255db46e27f21b13abfe170bbc4beed0f868f1e6a5642fbf940042e76a45519fed5082e11e2c83246af127e3d303e2fe2eaab4ce62407f142f16a495a6a0b8630405204998f96620e66a7582cbef6e878e2e6ccc51dfd6b3a6c2bfa392803ae391953b11c8dd2dcacd8fd983d8672b58a4b3e7689a07cd87bc2e2137cc49ad0a46b1ae806ff5903ec82c58dcc824287ccfb20419459dccb00f66d248b667ca06f576705c7b9d1bd4c9cedc6de177fb24c970221cf4db8256cd63256870e3d4101aed3d4105bfe459260f49140ea7b0d9c1ee1f1d06f11efab8608935a68141004578eb65ccd5ca133e136db538951961cde3f904465d3ab2cf79ae17834fdfff19edc81b8de6febc904dd9c1b4d019ab8bb09bf3bebb75fe6310a4cf7c023888c36c32690da5ddd1b64a0ba00a6138e35e98cfd07d371f1bf67617a0c34f640b017181ebf86578beb2c27291f5fce18c6cc38f33a21006868fd53e5c809812a7a8188fb3a0ecd116947efc930a611b8edaafc032418c441952f4be60672fe59312c53cca306e53a91f1eb28fa819ce2d0df75f72dc4c0048d261664ff48fcc044a87049b71c5bf186ca52255de03415c1a37b26877bc446cd0417aa16e291a516e3ec017048eeef293fd3ad13d42090a4ecba4ded708e036dd0fcf21781dd5273e0275da10304955706111a3f3f5b56b30293b3b4849a35d1501ef51502614b99a5caacc9e9c313e884b6c4f059f2077854696cd670fae07227f7f591edbdf06c6bfb3db1e0106fdade36cd9fc91c5324f7bab925fc604514f61a5126ea37ca963b1bb9dc8946f901f27ac1a3ff2fcfb7821f1b635a54c040c831b4b7f2c8a0b390849cf531cd4639c07c62c20bc62399a7fa686e7d3db9048990c5d936f85680b484e242e1f7b9dfbfb557569a0d214547c3122f9a72bd1409ffa549747ce9db2e0aaab44068ddbe8c3ad812cb8b9e6d5f7f016f4e25daa5efb1a53c564c0adae2b6852ab49816943e2e3f3d4803b9ad90aef3f03d40bd31ab79d78e39906b460cc48c940fdba31ffb6181be60334ae4a2f1dec9c4210c030a11214c61ccf228ff441777f8d4c57f0773cb3135bb87cfc2f36164467806be8d7a1295c01037a7dd14934796d679a5825cb805fcdbff4a5da2d8579cc7a18f24676b998576e7389e0f6b2ffb0e37e12a49c41a635a47058cd65fa224ff7f99eb113578742f19b513e78ccf516d76a30dad23ef9832397a49b64030b39225edc32326c6f290173082d7f2e9e5d3056b69f8eea0273534be29d929d3c63505808db0b269cece6f8f00360d0385baeefad01e488c5168ab047fe02df1403dafb5cbfc0db093bff08cebf090062029ae7eff8644203d22916a83395cb825d5e9feebef880e101c5a25c156bbcd7b307831aff357be7d89e205fdfa68341baf5f115bdaabe4ed901dd919b5145da4f09ba858f736f4fa62b5c71aca3136bfaa72913c80d3d3397a7e07ee94b90c6153a94d1d1fcdb8dae86b1aaaf61fd930245ae5d222d0b13f317ed9d45a1d15ddb9c62384ba1e9aae3c3dcb973f89bed32c88a8f643db3d444f8ea05e7c9ee7da2bcb956e220fbd12d89d30f55a778f9ab384670e710f0a59deef427570a4b4d048758b6763e0efd50d52a394e59b4e21753ae9d9a218bab3419830583c3a4aae775ed4c6bba2a9d7ae4654e37e90690885aeaccb0d72ee3"

func ExampleTMap_GetKey() {
	map0, _ := hex.DecodeString(hexMap0)
	tfile, err := tdata.ReadPhysical(bytes.NewReader(map0))
	if err != nil {
		fmt.Println(err)
	}
	tmap, err := ToTMap(tfile)
	if err != nil {
		fmt.Println("could not read tmap: ", err)
	}
	key, err := tmap.GetKey("")
	if err != nil {
		fmt.Println("could not get key: ", err)
	}
	fmt.Println(hex.EncodeToString(key))
	// Output:
	// 4dd3f7947d2f92c5802f2e05cb27520e6a169cdffc071cfcecb2c60c6b1b14152e52afeb5f6e224bb609389187e10d8ed78e6fd8688121783c0ce4dccf816c1e0da13b974d52974b23a7601059393b9f78f0d238c13a957e8da4495d42f4e8be233ef04f08ba9603a681b709512cb2b2b60fb81f4ac515f81fb3d9ed85227732e267ba4d0b005e2df1fcb8afbfc751186b381cc917a9eb665ac1e555a9742acf848756b665164ad6918e578c21fd72c94db48fe291626932e6498d3786b8db45d172acc2b223bd2694dc36d8c219795619018c7adeb6bbbee9b74d28dbf3c1ec87be76da05e6d67cff34dc491c9c88e2d2b4fbdf4637d1bcedfbafb2c8cf0cf34fb82034b1afcad38ee310ce
}

func ExampleTMap_Decrypt() {
	map0, _ := hex.DecodeString(hexMap0)
	tfile, err := tdata.ReadPhysical(bytes.NewReader(map0))
	if err != nil {
		log.Fatal(err)
	}
	tmap, err := ToTMap(tfile)
	if err != nil {
		log.Fatal(err)
	}
	key, err := tmap.GetKey("")
	if err != nil {
		log.Fatal(err)
	}
	decrypted, err := tmap.Decrypt(key)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Println(hex.EncodeToString(decrypted))
	// Output:
	// d009000000000003000000582e6ab17475aa9e27000000010000689b0000000029db2dca000017cccb142f5441fb2a0d000000010003b93900000000300c72970001415c45edca91d364c281000000010003b93a00000000300c72970000032c1852f6449e9ca19b000000010003b93c00000000300c729700001b7c3894a0cb1e0917cf00000002000039b6000000000f394cd20000200c45ad764df3c6b04a00000002000060f1000000000e0803700000200cfda25d9e4542cc85000000020000f6ba000000000eab53120000041ca77ed6b767844c030000000200016030000000000d481697000017cc38eef2c8362614b8000000020001cef7000000000eb7b96a00001a3c6af556ce4d0c1ecf000000020001d8be000000000e46c2060000188c4e9317f4da2294de00000002000220c0000000000e9aa5410000143c34bc7897b8293bb40000000200035fb3000000000eabb43c0000039cbd91b5ac8a8e42940000000200035fb5000000000eabb43c00007c1c97ad5afa473db1b1000000020003bac5000000000e9c1be2000022fc608ebdcdece58a2e000000020003d008000000000eab54570000c70c69647ce2d2eaaceb000000020003d009000000000eab54570000033cf68244923026818a0000000200053465000000000eabb8520000034c79ccf70b3873732e0000000200053467000000000eabb8520000536cfbbff53429c46d6e0000000200065b77000000000eb7bd3b0000ad4cb3e34036aaacaef30000000200065b78000000000eb7bd3b0000043c87e9828da4c063b70000000400000fb900000000308b139500000abc85106b849cb944c40000000400001ba50000000030729ed300000b1c435a5e5557f1f66e0000000400003bee00000000196154b9000009bccd63270ae9e5de87000000040000aea8000000001b2ce8af0000070c15a701c008387481000000040000b1e0000000001b2cd20a0000053c3e9954d7ee5c2ad7000000040000b40f000000001b2ceb4b0000036cc047774b34f4e9e9000000040000b7e9000000001b2d047d000002ecc673334ac5f53840000000040000d72e000000001a9eec3c000006ac33e91b97e41e9e00000000040000d731000000001a9eec3c0001d8bc68215222607b45f60000000400014383000000001ac35f30000002dcf51cd8c90b9374b90000000400016b6f000000001aa0a827000003bc20f2d15a20e9b1a90000000400021ab6000000001a9a6d01000004dc96d4305313dedd870000000400024aed000000001b221a010000082c0f4e1992973d1a0d0000000400024e84000000001b2215440000043c13a6c1d10382a0c90000000400024f0e000000001b2201990000071cda2a074f86ae86340000000400024f26000000001b21f206000005fc0b711c90647f7a460000000400024fcb000000001b21e48c0000035c6eed84e853c62dc60000000400024fff000000001b221a12000006aceb27f8278b8b7f7b00000004000250ba000000001b2976910000039c2856d606d03ea0640000000400025268000000001b2219a20000068c6ea1d5edf4e6a3da0000000400025269000000001b2219a2000070dc24e50f9397646fcf0000000400025329000000001b220f830000076ca8fca44c3b2b8ded000000040002532a000000001b220f830000685cf23bab36d0431a2d000000040002546a000000001b220d4f0000052c6c0aab41736091210000000400025bcd000000001b2976b7000002cc27b2a8b6b65d63c50000000400025bce000000001b2976b70000233c555256ce1a232167000000040002ba33000000001b1ee066000005fc22ad74c2ca099908000000040002e8e1000000001b1f3b620000076c59a8ef898901fdfa000000040002ea69000000001b1f26680000076ce020bcea5f4152d8000000040002eba5000000001b1f339d000004acb3c92698566c3d0d000000040002ed76000000001b1f324a000006acd54b163d1b9bfba3000000040002edcc000000001b1f40580000046cfa853657e93625b4000000040002edcd000000001b1f405800001a5c3d70e34bab025e56000000040002ef35000000001b1f3ef90000074c25eeb34f7478ab7a000000040002ef43000000001b1f1b690000059cb91a865da8c20acc000000040002f067000000001b20568b0000068cb8d06932e289ec9c000000040002f068000000001b20568b000060ac208e1b52a3b4111e000000040002f2d3000000001b1f2a8e0000066c64892bf785330b9d000000040002f355000000001b1edb200000073c977a742020df3af7000000040002f39b000000001b204e080000066cc57fa7c3c1e7c91c000000040002f39c000000001b204e0800005a9c2c9eb56129980fe8000000040002f3d0000000001b1f2569000003fc6729c31e28748e08000000040002f3d1000000001b1f25690000310c88c22032573ed0ad000000040002f435000000001b1f06b80000053cee064a0214fdc79b000000040002f436000000001b1f06b80000352caef3b989e667fc40000000040002f456000000001b1ee146000005dcef6c7a1fd46c6d09000000040002f4d8000000001b1ef22f0000058cb10616bdef94c0f9000000040002f4f4000000001b1f0d3c0000072c69be493874cf7741000000040002f51a000000001b1f2ae90000078c8ecb51039f6383ab000000040002f51b000000001b1f2ae90000577cc9e9d1117da4e7c5000000040002f679000000001b1ef4510000070cf382b82b8fba9c48000000040002f82b000000001b1edc1c0000066c23ed803956ecff27000000040002f82c000000001b1edc1c00004ffce62c18330916bba3000000040002f91c000000001b1f2dce0000080c92f7d307b8cb1df1000000040002fa7e000000001b1ef05a000002ac2134c072cadbaa02000000040002fa7f000000001b1ef05a00001d2c34e1a27e5ee6cc42000000040002faea000000001a9f1a3c0000042c442f3797b9675fb8000000040002fb26000000001b1ee8f70000055c0583b4b8ffa1f34c000000040002fb27000000001b1ee8f700004fcc36689099f7827178000000040003069e00000000195e59220000039cca5139c9702225c700000004000413f5000000001b22212d000004bc1bdb5fc57eb4a69f00000004000418d9000000001ac363800000044cb8280e7dd0ecfcef0000000400041beb000000001ac378030000075cf671a8d6d441f2960000000400041bec000000001ac37803000068dcf3bc73631f9a275a0000000400041c60000000001b221e120000036cee4e728ea5c0045100000004000426b1000000001ac36f8a0000056cbbdd5598ff2b2cef00000004000427dd000000001ac363e4000070dc32961197d298205800000004000427de000000001ac363e40000076c0000000d735f4ef83ba7cb3b00000008b145f77302906f5200000009d4cf92b6551271c0
}
